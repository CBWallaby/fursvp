<?xml version="1.0"?>
<doc>
    <assembly>
        <name>fursvp.api</name>
    </assembly>
    <members>
        <member name="T:Fursvp.Api.ClaimsPrincipalUserAccessor">
            <summary>
            Provides information about a user via claims based authentication.
            </summary>
        </member>
        <member name="M:Fursvp.Api.ClaimsPrincipalUserAccessor.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Initializes a new instance of the <see cref="T:Fursvp.Api.ClaimsPrincipalUserAccessor"/> class.
            </summary>
            <param name="httpContextAccessor">The HttpContextAccessor.</param>
        </member>
        <member name="P:Fursvp.Api.ClaimsPrincipalUserAccessor.User">
            <summary>
            Gets the authenticated user, or null if the user is not authenticated.
            </summary>
        </member>
        <member name="T:Fursvp.Api.Controllers.AuthController">
            <summary>
            Authentication controller.
            </summary>
        </member>
        <member name="M:Fursvp.Api.Controllers.AuthController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Caching.Memory.IMemoryCache,Fursvp.Communication.IEmailer)">
            <summary>
            Initializes a new instance of the <see cref="T:Fursvp.Api.Controllers.AuthController"/> class.
            </summary>
            <param name="configuration">The application configuration.</param>
            <param name="memoryCache">The application memory cache.</param>
            <param name="emailer">The instance of <see cref="T:Fursvp.Communication.IEmailer"/> used to suppress or send emails.</param>
        </member>
        <member name="M:Fursvp.Api.Controllers.AuthController.DebugAuth(System.String)">
            <summary>
            Instantly logs in a tester with the email address provided. For Debugging only.
            </summary>
            <param name="emailAddress">The email address to log in as.</param>
            <returns>The generated token.</returns>
        </member>
        <member name="M:Fursvp.Api.Controllers.AuthController.DebugError">
            <summary>
            Throws an exception.
            </summary>
        </member>
        <member name="M:Fursvp.Api.Controllers.AuthController.VerifyEmail(Fursvp.Api.Requests.VerifyEmailRequest)">
            <summary>
            Logs in a tester with the email address provided by verifying a cached verification code.
            </summary>
            <param name="verifyEmailRequest">The email address and verification code.</param>
            <returns>OkObjectResult with the generated token on success, UnauthorizedResult otherwise.</returns>
        </member>
        <member name="M:Fursvp.Api.Controllers.AuthController.SendVerificationCode(Fursvp.Api.Requests.SendVerificationCodeRequest)">
            <summary>
            Sends a verification email and caches the verification code.
            </summary>
            <param name="sendVerificationCodeRequest">The email address to log in as.</param>
            <returns>An OkResult on success or BadRequestResult on failure.</returns>
        </member>
        <member name="T:Fursvp.Api.Controllers.EventController">
            <summary>
            Manages Events.
            </summary>
        </member>
        <member name="M:Fursvp.Api.Controllers.EventController.#ctor(Microsoft.Extensions.Logging.ILogger{Fursvp.Api.Controllers.EventController},Fursvp.Domain.IEventService,Fursvp.Data.IRepositoryWrite{Fursvp.Domain.Event},Fursvp.Data.IRepositoryRead{Fursvp.Domain.Event},Fursvp.Communication.IEmailer)">
            <summary>
            Initializes a new instance of the <see cref="T:Fursvp.Api.Controllers.EventController"/> class.
            </summary>
            <param name="logger">The application event logger.</param>
            <param name="eventService">The instance of <see cref="T:Fursvp.Domain.IEventService"/> used to create and update Events.</param>
            <param name="eventRepositoryWrite">The instance of <see cref="T:Fursvp.Data.IRepositoryWrite`1"/> used for Event persistence write operations.</param>
            <param name="eventRepositoryRead">The instance of <see cref="T:Fursvp.Data.IRepositoryRead`1"/> used for Event persistence read operations.</param>
            <param name="emailer">The emailer what sends the emails.</param>
        </member>
        <member name="M:Fursvp.Api.Controllers.EventController.GetEvents">
            <summary>
            Retrieves details for all Events.
            </summary>
            <returns>A list of objects representing each Event.</returns>
        </member>
        <member name="M:Fursvp.Api.Controllers.EventController.GetEvent(System.Guid)">
            <summary>
            Retrieves details for an Event.
            </summary>
            <param name="id">The globally unique identifier of the Event to update.</param>
            <returns>An object representing the Event matching the id.</returns>
        </member>
        <member name="M:Fursvp.Api.Controllers.EventController.CreateEvent(Fursvp.Api.Requests.NewMemberRequest)">
            <summary>
            Creates a new Event.
            </summary>
            <param name="author">The <see cref="T:Fursvp.Api.Requests.NewMemberRequest"/> for the author of the Event.</param>
            <returns>201 Created on success.</returns>
        </member>
        <member name="M:Fursvp.Api.Controllers.EventController.UpdateEvent(System.Guid,Fursvp.Api.Requests.UpdateEventRequest)">
            <summary>
            Updates an Event.
            </summary>
            <param name="eventId">The globally unique identifier of the Event to update.</param>
            <param name="request">The <see cref="T:Fursvp.Api.Requests.UpdateEventRequest" /> containing new Event details.</param>
            <returns>200 Ok on success, or 404 Not Found if the Event Id is not found.</returns>
        </member>
        <member name="M:Fursvp.Api.Controllers.EventController.PublishEvent(System.Guid)">
            <summary>
            Updates an Event so that it is publicly visible.
            </summary>
            <param name="eventId">The globally unique identifier for the Event.</param>
            <returns>200 Ok on success, or 404 Not Found if the Event Id is not found.</returns>
        </member>
        <member name="M:Fursvp.Api.Controllers.EventController.UnpublishEvent(System.Guid)">
            <summary>
            Updates an Event so that it is no longer publicly visible.
            </summary>
            <param name="eventId">The globally unique identifier for the Event.</param>
            <returns>200 Ok on success, or 404 Not Found if the Event Id is not found.</returns>
        </member>
        <member name="M:Fursvp.Api.Controllers.EventController.AddMember(System.Guid,Fursvp.Api.Requests.NewMemberRequest)">
            <summary>
            Adds a new member to an Event's signups.
            </summary>
            <param name="eventId">The globally unique identifier for the Event.</param>
            <param name="newMember">The <see cref="T:Fursvp.Api.Requests.NewMemberRequest" /> containing member data to be added.</param>
            <returns>201 Created on success, 404 Not Found if the Event Id is not found, or 400 Bad Request if the member's email address already exists in the event.</returns>
        </member>
        <member name="M:Fursvp.Api.Controllers.EventController.UpdateMember(System.Guid,System.Guid,Fursvp.Api.Requests.UpdateMemberRequest)">
            <summary>
            Updates the member's info for an Event.
            </summary>
            <param name="eventId">The globally unique identifier for the Event.</param>
            <param name="memberId">The globally unique identifier for the Event's Member to be updated.</param>
            <param name="updateMember">The <see cref="T:Fursvp.Api.Requests.UpdateMemberRequest" /> containing member data to be updated.</param>
            <returns>200 Ok on success, 404 Not Found if either the Event Id or Member Id are not found, or 400 Bad Request if the member is not either attending or an organizer.</returns>
        </member>
        <member name="M:Fursvp.Api.Controllers.EventController.RemoveMember(System.Guid,System.Guid)">
            <summary>
            Removes a Member from an Event's sign-ups.
            </summary>
            <param name="eventId">The globally unique identifier for the Event.</param>
            <param name="memberId">The globally unique identifier for the Event's Member to be removed.</param>
            <returns>204 No Content on success, or 404 Not Found if either the Event Id or Member Id are not found.</returns>
        </member>
        <member name="T:Fursvp.Api.Controllers.TimeZonesController">
            <summary>
            The Web Api Controller used to get Time Zone details.
            </summary>
        </member>
        <member name="M:Fursvp.Api.Controllers.TimeZonesController.#ctor(Microsoft.Extensions.Logging.ILogger{Fursvp.Api.Controllers.EventController})">
            <summary>
            Initializes a new instance of the <see cref="T:Fursvp.Api.Controllers.TimeZonesController"/> class.
            </summary>
            <param name="logger">The application event logger.</param>
        </member>
        <member name="M:Fursvp.Api.Controllers.TimeZonesController.GetTimeZones">
            <summary>
            Gets a list of all Time Zones by their unique Id and DisplayName.
            </summary>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> for the web response.</returns>
        </member>
        <member name="T:Fursvp.Api.Filters.ApiExceptionFilter">
            <summary>
            Intercepts http and https calls when an exception is thrown.
            </summary>
        </member>
        <member name="M:Fursvp.Api.Filters.ApiExceptionFilter.#ctor(Microsoft.Extensions.Logging.ILogger{Fursvp.Api.Filters.ApiExceptionFilter},Fursvp.Communication.IEmailer,Fursvp.Domain.Authorization.IUserAccessor,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:Fursvp.Api.Filters.ApiExceptionFilter"/> class.
            </summary>
            <param name="logger">The application event logger.</param>
            <param name="emailer">The sender or suppressor of emails.</param>
            <param name="userAccessor">Accesses the current user info.</param>
            <param name="webHostEnvironment">The web hosting environment.</param>
        </member>
        <member name="M:Fursvp.Api.Filters.ApiExceptionFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            Handle an Exception caught by MVC. Called by MVC when an otherwise uncaught exception is thrown.
            </summary>
            <param name="context">The Exception context.</param>
        </member>
        <member name="T:Fursvp.Api.Filters.DebugModeOnlyFilter">
            <summary>
            Intercepts http and https calls and throws an exception if the current environment is not a Development environment.
            </summary>
        </member>
        <member name="M:Fursvp.Api.Filters.DebugModeOnlyFilter.#ctor(Microsoft.Extensions.Logging.ILogger{Fursvp.Api.Filters.ApiExceptionFilter},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:Fursvp.Api.Filters.DebugModeOnlyFilter"/> class.
            </summary>
            <param name="logger">The application event logger.</param>
            <param name="env">The web hosting environment.</param>
        </member>
        <member name="M:Fursvp.Api.Filters.DebugModeOnlyFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Throws an exception if the environment is not Development.
            </summary>
            <param name="context">The ActionExecutingContext.</param>
        </member>
        <member name="T:Fursvp.Api.Program">
            <summary>
            The entry point for Fursvp.
            </summary>
        </member>
        <member name="M:Fursvp.Api.Program.Main(System.String[])">
            <summary>
            The main entry point for the program.
            </summary>
            <param name="args">Arguments provided by the command line.</param>
        </member>
        <member name="M:Fursvp.Api.Program.CreateHostBuilder(System.String[])">
            <summary>
            Builds a .net core web host builder to be run.
            </summary>
            <param name="args">The command line args for the builder.</param>
            <returns>The .net core web host builder.</returns>
        </member>
        <member name="T:Fursvp.Api.Requests.NewMemberRequest">
            <summary>
            The request model representing a new Member for an Event.
            </summary>
        </member>
        <member name="P:Fursvp.Api.Requests.NewMemberRequest.EmailAddress">
            <summary>
            Gets or sets the Email Address for the new Member.
            </summary>
        </member>
        <member name="P:Fursvp.Api.Requests.NewMemberRequest.Name">
            <summary>
            Gets or sets the display name for the new Member.
            </summary>
        </member>
        <member name="P:Fursvp.Api.Requests.SendVerificationCodeRequest.EmailAddress">
            <summary>
            Gets or sets the Email Address to verify.
            </summary>
        </member>
        <member name="T:Fursvp.Api.Requests.UpdateEventRequest">
            <summary>
            The request model representing an updated Event.
            </summary>
        </member>
        <member name="P:Fursvp.Api.Requests.UpdateEventRequest.Location">
            <summary>
            Gets or sets the locaiton of the Event.
            </summary>
        </member>
        <member name="P:Fursvp.Api.Requests.UpdateEventRequest.Name">
            <summary>
            Gets or sets the Event Name.
            </summary>
        </member>
        <member name="P:Fursvp.Api.Requests.UpdateEventRequest.OtherDetails">
            <summary>
            Gets or sets miscellaneous information about an Event.
            </summary>
        </member>
        <member name="P:Fursvp.Api.Requests.UpdateEventRequest.RsvpOpen">
            <summary>
            Gets or sets a value indicating whether RSVPs for an Event are open before RsvpClosesAt.
            </summary>
        </member>
        <member name="P:Fursvp.Api.Requests.UpdateEventRequest.RsvpClosesAt">
            <summary>
            Gets or sets the date and time at which RSVPs for the Event are scheduled to close.
            </summary>
        </member>
        <member name="P:Fursvp.Api.Requests.UpdateEventRequest.StartsAt">
            <summary>
            Gets or sets the date and time at which the Event is scheduled to start.
            </summary>
        </member>
        <member name="P:Fursvp.Api.Requests.UpdateEventRequest.EndsAt">
            <summary>
            Gets or sets the date and time at which the Event is scheduled to end.
            </summary>
        </member>
        <member name="P:Fursvp.Api.Requests.UpdateEventRequest.TimeZoneId">
            <summary>
            Gets or sets the time zone id for the event.
            </summary>
        </member>
        <member name="T:Fursvp.Api.Requests.UpdateMemberRequest">
            <summary>
            The request model pertaining to inserting or updating Member info.
            </summary>
        </member>
        <member name="P:Fursvp.Api.Requests.UpdateMemberRequest.IsAttending">
            <summary>
            Gets or sets a value indicating whether an event member is attending the event.
            </summary>
        </member>
        <member name="P:Fursvp.Api.Requests.UpdateMemberRequest.IsOrganizer">
            <summary>
            Gets or sets a value indicating whether an event member is an organizer.
            </summary>
        </member>
        <member name="P:Fursvp.Api.Requests.VerifyEmailRequest.EmailAddress">
            <summary>
            Gets or sets the Email Address to verify.
            </summary>
        </member>
        <member name="P:Fursvp.Api.Requests.VerifyEmailRequest.VerificationCode">
            <summary>
            Gets or sets the verification code.
            </summary>
        </member>
        <member name="T:Fursvp.Api.Startup">
            <summary>
            Fursvp .NET Core Web Api initialization routines.
            </summary>
        </member>
        <member name="M:Fursvp.Api.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:Fursvp.Api.Startup"/> class.
            </summary>
            <param name="configuration">An instance of <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/>.</param>
            <param name="environment">The <see cref="T:Microsoft.AspNetCore.Hosting.IWebHostEnvironment"/> instance containing environment specific settings.</param>
        </member>
        <member name="M:Fursvp.Api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services">The container in which components are registered.</param>
        </member>
        <member name="M:Fursvp.Api.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> instance to configure.</param>
            <param name="env">The <see cref="T:Microsoft.AspNetCore.Hosting.IWebHostEnvironment"/> instance containing environment specific settings.</param>
        </member>
    </members>
</doc>
