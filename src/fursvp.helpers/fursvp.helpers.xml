<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fursvp.Helpers</name>
    </assembly>
    <members>
        <member name="T:Fursvp.Helpers.Assertions`1">
            <summary>
            A helper class that can throws an exception in the event of an unexpected result.
            </summary>
            <typeparam name="TException">The type of Exception to throw when an assert fails.</typeparam>
        </member>
        <member name="M:Fursvp.Helpers.Assertions`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fursvp.Helpers.Assertions`1"/> class.
            </summary>
        </member>
        <member name="M:Fursvp.Helpers.Assertions`1.That(System.Boolean,System.String)">
            <summary>
            Throws an exception when an evaluation result is false.
            </summary>
            <param name="evaluation">The result that is expected to have evaluated to true.</param>
            <param name="reason">The Exception message used when the result is not true and an Exception is thrown.</param>
        </member>
        <member name="T:Fursvp.Helpers.IEnumerableExtensions">
            <summary>
            Contains extension methods for IEnumerable types.
            </summary>
        </member>
        <member name="M:Fursvp.Helpers.IEnumerableExtensions.FullJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
            <summary>
            Correlates the elements of two sequences based on matching keys.
            </summary>
            <typeparam name="TOuter">The type of the elements of the first sequence.</typeparam>
            <typeparam name="TInner">The type of the elements of the second sequence.</typeparam>
            <typeparam name="TKey">The type of the keys returned by the key selector functions.</typeparam>
            <typeparam name="TResult">The type of the result elements.</typeparam>
            <param name="outer">The first sequence to join.</param>
            <param name="inner">The sequence to join to the first sequence.</param>
            <param name="outerKeySelector">A function to extract the join key from each element of the first sequence.</param>
            <param name="innerKeySelector">A function to extract the join key from each element of the second sequence.</param>
            <param name="resultSelector">A function to create a result element from two matching elements.</param>
            <returns>An IEnumerable that has elements of type TResult that are obtained by performing a full outer join on two sequences.</returns>
        </member>
    </members>
</doc>
